import nltk
import re
import csv
import emoji
from unicodedata import normalize
from nltk.tokenize import word_tokenize
from string import punctuation 
from nltk.corpus import stopwords 
from more_itertools import unique_everseen


def stop_words():

    return {
        'sobre',
        'acima',
        'através',
        'depois de',
        'novamente',
        ',',
        'todos',
        'quase',
        'sozinho',
        'ao longo',
        'já',
        'além disso',
        'apesar',
        'sempre',
        'entre',
        'a',
        'e',
        'outro',
        'qualquer',
        'qualquer pessoa',
        'qualquer um',
        'qualquer coisa',
        'qualquer lugar',
        'está',
        'área',
        'areas',
        'por aí',
        'como',
        'pergunte',
        'perguntei',
        'perguntando',
        'pergunta',
        'a',
        'longe',
        'b',
        'de volta',
        'apoiado',
        'apoio',
        'costas',
        'estar',
        'passou a ser',
        'porque',
        'tornar-se',
        'torna-se',
        'fui',
        'antes',
        'começasse',
        'atrás',
        'ser',
        'seres',
        'melhor',
        'melhor',
        'entre',
        'grande',
        'ambos',
        'mas',
        'por',
        'c',
        'veio',
        'posso',
        'não pode',
        'caso',
        'casos',
        'certo',
        'certamente',
        'claro',
        'claramente',
        'venha',
        'poderia',
        'd',
        'fez',
        'diferir',
        'diferente',
        'diferentemente',
        'faz',
        'faz',
        'feito',
        'baixa',
        'abatido',
        'derrubada',
        'baixos',
        'durante',
        'e',
        'cada',
        'cedo',
        'ou',
        'fim',
        'terminou',
        'final',
        'termina',
        'o suficiente',
        'até',
        'uniformemente',
        'sempre',
        'cada',
        'todo o mundo',
        'todos',
        'tudo',
        'em toda parte',
        'f',
        'face',
        'rostos',
        'facto',
        'factos',
        'longe',
        'sentido',
        'poucos',
        'encontrar',
        'encontra',
        'primeiro',
        'para',
        'quatro',
        'de',
        'cheio',
        'totalmente',
        'mais distante',
        'promovido',
        'promovendo',
        'promove',
        'g',
        'deu',
        'geral',
        'geralmente',
        'pegue',
        'fica',
        'dar',
        'dado',
        'dá',
        'vai',
        'indo',
        'boa',
        'mercadorias',
        'obteve',
        'ótimo',
        'maior',
        'maior',
        'grupo',
        'agrupado',
        'agrupamento',
        'grupos',
        'h',
        'teve',
        'tem',
        'ter',
        'tendo',
        'ele',
        'dela',
        'aqui',
        'ela própria',
        'alto',
        'superior',
        'maior',
        'ele',
        'ele mesmo',
        'dele',
        'como',
        'contudo',
        'eu',
        'e se',
        'importante',
        'em',
        'interesse',
        'interessado',
        'interessante',
        'interesses',
        'para dentro',
        'é',
        'isto',
        'está',
        'em si',
        'j',
        'somente',
        'k',
        'manter',
        'mantém',
        'tipo',
        'sabia',
        'conhecer',
        'conhecido',
        'sabe',
        'eu',
        'ampla',
        'largamente',
        'último',
        'mais tarde',
        'mais recentes',
        'menos',
        'menos',
        'deixei',
        'deixar',
        'gostar',
        'provável',
        'longo',
        'mais longo',
        'mais longo',
        'm',
        'fez',
        'faço',
        'fazer',
        'homem',
        'muitos',
        'maio',
        'mim',
        'membro',
        'membros',
        'homens',
        'poderia',
        'mais',
        'a maioria',
        'na maioria das vezes',
        'sr',
        'sra',
        'de',
        'devo',
        'minha',
        'eu mesmo',
        'n',
        'necessário',
        'precisar',
        'necessário',
        'precisando',
        'necessidades',
        'nunca',
        'novo',
        'mais recente',
        'o mais novo',
        'próximo',
        'não',
        'ninguém',
        'não',
        'ninguém',
        'não',
        'nada',
        'agora',
        'lugar algum',
        'número',
        'números',
        'o',
        'do',
        'fora',
        'frequentemente',
        'velho',
        'mais velho',
        'mais antigo',
        'em',
        'uma vez',
        'um',
        'só',
        'abrir',
        'aberto',
        'abertura',
        'abre',
        'ou',
        'ordem',
        'encomendado',
        'encomenda',
        'encomendas',
        'de outros',
        'outras',
        'nosso',
        'fora',
        'sobre',
        'p',
        'parte',
        'se separaram',
        'despedida',
        'partes',
        'por',
        'possivelmente',
        'lugar', 
        'colocar',
        'locais',
        'ponto',
        'apontou',
        'apontando',
        'pontos',
        'possível',
        'presente',
        'apresentado',
        'apresentar',
        'presentes',
        'problema',
        'problemas',
        'colocar',
        'coloca',
        'q',
        'bastante',
        'r',
        'em vez',
        'realmente',
        'certo',
        'sala',
        'quartos',
        's',
        'disse',
        'mesmo',
        'serra',
        'dizer',
        'diz',
        'segundo',
        'segundos',
        'vejo',
        'parece',
        'parecia',
        'aparente',
        'parece',
        'vê',
        'de várias',
        'deve',
        'ela',
        'devemos',
        'exposição',
        'mostrou',
        'mostrando',
        'shows',
        'lado',
        'lados',
        'desde a',
        'pequeno',
        'menor',
        'menor',
        'assim',
        'alguns',
        'alguém',
        'alguém',
        'alguma coisa',
        'algum lugar',
        'estado',
        'estados',
        'ainda',
        'tal',
        'certo',
        't',
        'leva',
        'ocupado',
        'do que',
        'naquela',
        'a',
        'seus',
        'eles',
        'então',
        'lá',
        'assim sendo',
        'estes',
        'eles',
        'coisa',
        'coisas',
        'pensar',
        'acha',
        'isto',
        'essa',
        'apesar',
        'pensamento',
        'pensamentos',
        'três',
        'através',
        'portanto',
        'para',
        'hoje',
        'juntos',
        'também',
        'tomou',
        'em direção a',
        'virar',
        'virou',
        'girando',
        'voltas',
        'dois',
        'você',
        'debaixo',
        'até',
        'acima',
        'sobre',
        'nos',
        'usar',
        'usava',
        'usa',
        'v',
        'muito',
        'w',
        'quer',
        'procurado',
        'querendo',
        'quer',
        'estava',
        'caminho',
        'maneiras',
        'nós',
        'bem',
        'poços',
        'foi',
        'estavam',
        'que',
        'quando',
        'onde',
        'se',
        'qual',
        'enquanto',
        'quem',
        'todo',
        'de quem',
        'porque',
        'vai',
        'com',
        'dentro',
        'sem',
        'trabalhos',
        'trabalhado',
        'trabalhando',
        'trabalho',
        'seria',
        'x',
        'y',
        'ano',
        'anos',
        'ainda',
        'você',
        'jovem',
        'mais jovem',
        'mais jovem',
        'seu',
        'sua',
        'z',
        'compartilhar',
        'linkthese',
        'sou',
        'não são',
        'abaixo',
        'não pode',
        'não podia',
        'não fez',
        'não faz',
        'fazendo',
        'não faça',
        'não tinha',
        'não tem',
        'não tem',
        'ele tinha',
        'inferno',
        'ele é',
        'aqui está',
        'dela',
        'como está',
        'identidade',
        'eu vou',
        'eu estou',
        'eu tenho',
        'não é',
        'está',
        'vamos',
        'não deve',
        'nem',
        'deveria',
        'nosso',
        'nós mesmos',
        'próprio',
        'ela',
        'ela vai',
        'ela é',
        'não deveria',
        'isso é',
        'deles',
        'si mesmos',
        'há',
        'eles tinham',
        'eles vão',
        'eles estão',
        'eles já',
        'não foi',
        'qua',
        'bem',
        'estamos',
        'nós temos',
        'não estava',
        'o que é',
        'quando é',
        'onde está a',
        'quem é',
        'o qual',
        'por que',
        'não vai',
        'não faria',
        'você gostaria',
        'você vai',
        'você é',
        'você tem',
        'você mesmo',
        'vocês mesmos'
        }


stopwords = set(stopwords.words('portuguese') + list(punctuation) + list(stop_words()))
# stopwords = set(list(punctuation))

def load_dict_smileys():
    
    return {
        ":‑)":"smiley",
        ":-]":"smiley",
        ":-3":"smiley",
        ":->":"smiley",
        "8-)":"smiley",
        ":-}":"smiley",
        ":)":"smiley",
        ":]":"smiley",
        ":3":"smiley",
        ":>":"smiley",
        "8)":"smiley",
        ":}":"smiley",
        ":o)":"smiley",
        ":c)":"smiley",
        ":^)":"smiley",
        "=]":"smiley",
        "=)":"smiley",
        ":-))":"smiley",
        ":‑D":"smiley",
        "8‑D":"smiley",
        "x‑D":"smiley",
        "X‑D":"smiley",
        ":D":"smiley",
        "8D":"smiley",
        "xD":"smiley",
        "XD":"smiley",
        ":‑(":"sad",
        ":‑c":"sad",
        ":‑<":"sad",
        ":‑[":"sad",
        ":(":"sad",
        ":c":"sad",
        ":<":"sad",
        ":[":"sad",
        ":-||":"sad",
        ">:[":"sad",
        ":{":"sad",
        ":@":"sad",
        ">:(":"sad",
        ":'‑(":"sad",
        ":'(":"sad",
        ":‑P":"playful",
        "X‑P":"playful",
        "x‑p":"playful",
        ":‑p":"playful",
        ":‑Þ":"playful",
        ":‑þ":"playful",
        ":‑b":"playful",
        ":P":"playful",
        "XP":"playful",
        "xp":"playful",
        ":p":"playful",
        ":Þ":"playful",
        ":þ":"playful",
        ":b":"playful",
        "<3":"love"
        }

def processTweet(tweet):
    tweet = tweet.lower() # convert text to lower-case
    tweet = re.sub('((www\.[^\s]+)|(https?://[^\s]+))', ' ', tweet) # remove URLs
    tweet = re.sub('@[^\s]+', ' ', tweet) # remove usernames
    # tweet = re.sub(r'#([^\s]+)', r'\1', tweet) # remove the # in #hashtag
    tweet = re.sub('#([^\s]+)', ' ', tweet) # remove the # in #hashtag
    tweet = re.sub('kk+k*', ' ', tweet) # remove risada (kkk)
    
    SMILEY = load_dict_smileys()  
    words = tweet.split()
    reformed = [SMILEY[word] if word in SMILEY else word for word in words]
    tweet = " ".join(reformed)
    tweet = emoji.demojize(tweet)
    # tweet = tweet.replace(":"," ")
    tweet = re.sub(':[^\s]*:+', '', tweet) #remove emoji 
    
    tweet = ' '.join(tweet.split())
    tweet = word_tokenize(tweet)
    tweet = [word for word in tweet if word not in stopwords]
    new_tweet = ''
    for word in tweet:
        new_tweet = new_tweet + word + ' '
    return new_tweet
    # return tweet

def removeDuplicates():
    with open('neymar.csv','r', encoding="utf-8") as f, open('neymar2.csv','w', encoding="utf-8") as out_file:
        out_file.writelines(unique_everseen(f))

removeDuplicates()
# -----------------------------------------------

# tweets = []

# print('lendo arquivo e fazendo preprocessamento\n')
# with open('neymar3.csv', encoding='utf-8') as csvfile:
#     readCSV = csv.reader(csvfile)
#     for row in readCSV:
#         aux = ' '.join(row)
#         tweets.append(processTweet(aux))
#         # tweets.append(normalize('NFKD', aux).encode('ASCII', 'ignore').decode('ASCII'))
# print('preprocessamento terminado')


# print('escrevendo\n')
# with open('neymar2.csv', mode='w', encoding='utf-8', newline='') as csvfile:
#     writeCSV = csv.writer(csvfile)
#     i = 0
#     while (i < len(tweets)):
#         writeCSV.writerow([tweets[i]])
#         # print('w: ',i)
#         i = i + 1
# print('escrito\n')
